import { Handshape, mod, Rotation } from "./types";

const rootShapeMap: Record<string, number> = {
  "񀀡": 0x40001,
  "񀂁": 0x40061,
  "񀃡": 0x400c1,
  "񀅁": 0x40121,
  "񀆡": 0x40181,
  "񀈁": 0x401e1,
  "񀉡": 0x40241,
  "񀋁": 0x402a1,
  "񀌡": 0x40301,
  "񀎁": 0x40361,
  "񀏡": 0x403c1,
  "񀑁": 0x40421,
  "񀒡": 0x40481,
  "񀔁": 0x404e1,
  "񀕡": 0x40541,
  "񀗁": 0x405a1,
  "񀘡": 0x40601,
  "񀚁": 0x40661,
  "񀛡": 0x406c1,
  "񀝁": 0x40721,
  "񀞡": 0x40781,
  "񀠁": 0x407e1,
  "񀡡": 0x40841,
  "񀣁": 0x408a1,
  "񀤡": 0x40901,
  "񀦁": 0x40961,
  "񀧡": 0x409c1,
  "񀩁": 0x40a21,
  "񀪡": 0x40a81,
  "񀬁": 0x40ae1,
  "񀭡": 0x40b41,
  "񀯁": 0x40ba1,
  "񀰡": 0x40c01,
  "񀲁": 0x40c61,
  "񀳡": 0x40cc1,
  "񀵁": 0x40d21,
  "񀶡": 0x40d81,
  "񀸁": 0x40de1,
  "񀹡": 0x40e41,
  "񀻁": 0x40ea1,
  "񀼡": 0x40f01,
  "񀾁": 0x40f61,
  "񀿡": 0x40fc1,
  "񁁁": 0x41021,
  "񁂡": 0x41081,
  "񁄁": 0x410e1,
  "񁅡": 0x41141,
  "񁇁": 0x411a1,
  "񁈡": 0x41201,
  "񁊁": 0x41261,
  "񁋡": 0x412c1,
  "񁍁": 0x41321,
  "񁎡": 0x41381,
  "񁐁": 0x413e1,
  "񁑡": 0x41441,
  "񁓁": 0x414a1,
  "񁔡": 0x41501,
  "񁖁": 0x41561,
  "񁗡": 0x415c1,
  "񁙁": 0x41621,
  "񁚡": 0x41681,
  "񁜁": 0x416e1,
  "񁝡": 0x41741,
  "񁟁": 0x417a1,
  "񁠡": 0x41801,
  "񁢁": 0x41861,
  "񁣡": 0x418c1,
  "񁥁": 0x41921,
  "񁦡": 0x41981,
  "񁨁": 0x419e1,
  "񁩡": 0x41a41,
  "񁫁": 0x41aa1,
  "񁬡": 0x41b01,
  "񁮁": 0x41b61,
  "񁯡": 0x41bc1,
  "񁱁": 0x41c21,
  "񁲡": 0x41c81,
  "񁳱": 0x41ce1,
  "񁵡": 0x41d41,
  "񁷁": 0x41da1,
  "񁸡": 0x41e01,
  "񁺁": 0x41e61,
  "񁻡": 0x41ec1,
  "񁽁": 0x41f21,
  "񁾡": 0x41f81,
  "񂀁": 0x41fe1,
  "񂁡": 0x42041,
  "񂃁": 0x420a1,
  "񂄡": 0x42101,
  "񂆁": 0x42161,
  "񂇡": 0x421c1,
  "񂉁": 0x42221,
  "񂊡": 0x42281,
  "񂌁": 0x422e1,
  "񂍡": 0x42341,
  "񂏁": 0x423a1,
  "񂐡": 0x42401,
  "񂒁": 0x42461,
  "񂓡": 0x424c1,
  "񂕁": 0x42521,
  "񂖡": 0x42581,
  "񂘁": 0x425e1,
  "񂙡": 0x42641,
  "񂛁": 0x426a1,
  "񂜡": 0x42701,
  "񂞁": 0x42761,
  "񂟡": 0x427c1,
  "񂡁": 0x42821,
  "񂢡": 0x42881,
  "񂤁": 0x428e1,
  "񂥡": 0x42941,
  "񂧁": 0x429a1,
  "񂨡": 0x42a01,
  "񂪁": 0x42a61,
  "񂫡": 0x42ac1,
  "񂭁": 0x42b21,
  "񂮡": 0x42b81,
  "񂰁": 0x42be1,
  "񂱡": 0x42c41,
  "񂳁": 0x42ca1,
  "񂴡": 0x42d01,
  "񂶁": 0x42d61,
  "񂷡": 0x42dc1,
  "񂹁": 0x42e21,
  "񂺡": 0x42e81,
  "񂼁": 0x42ee1,
  "񂽡": 0x42f41,
  "񂿁": 0x42fa1,
  "񃀡": 0x43001,
  "񃂁": 0x43061,
  "񃃡": 0x430c1,
  "񃅁": 0x43121,
  "񃆡": 0x43181,
  "񃈁": 0x431e1,
  "񃉡": 0x43241,
  "񃋁": 0x432a1,
  "񃌡": 0x43301,
  "񃎁": 0x43361,
  "񃏡": 0x433c1,
  "񃑁": 0x43421,
  "񃒡": 0x43481,
  "񃔁": 0x434e1,
  "񃕡": 0x43541,
  "񃗁": 0x435a1,
  "񃘡": 0x43601,
  "񃚁": 0x43661,
  "񃛡": 0x436c1,
  "񃝁": 0x43721,
  "񃞡": 0x43781,
  "񃠁": 0x437e1,
  "񃡡": 0x43841,
  "񃣁": 0x438a1,
  "񃤡": 0x43901,
  "񃦁": 0x43961,
  "񃧡": 0x439c1,
  "񃩁": 0x43a21,
  "񃪡": 0x43a81,
  "񃬁": 0x43ae1,
  "񃭡": 0x43b41,
  "񃯁": 0x43ba1,
  "񃰡": 0x43c01,
  "񃲁": 0x43c61,
  "񃳡": 0x43cc1,
  "񃵁": 0x43d21,
  "񃶡": 0x43d81,
  "񃸁": 0x43de1,
  "񃹡": 0x43e41,
  "񃻁": 0x43ea1,
  "񃼡": 0x43f01,
  "񃾁": 0x43f61,
  "񃿡": 0x43fc1,
  "񄁁": 0x44021,
  "񄂡": 0x44081,
  "񄄁": 0x440e1,
  "񄅡": 0x44141,
  "񄇁": 0x441a1,
  "񄈡": 0x44201,
  "񄊁": 0x44261,
  "񄋡": 0x442c1,
  "񄍁": 0x44321,
  "񄎡": 0x44381,
  "񄐁": 0x443e1,
  "񄑡": 0x44441,
  "񄓁": 0x444a1,
  "񄔡": 0x44501,
  "񄖁": 0x44561,
  "񄗡": 0x445c1,
  "񄙁": 0x44621,
  "񄚡": 0x44681,
  "񄜁": 0x446e1,
  "񄝡": 0x44741,
  "񄟁": 0x447a1,
  "񄠡": 0x44801,
  "񄢁": 0x44861,
  "񄣡": 0x448c1,
  "񄥁": 0x44921,
  "񄦡": 0x44981,
  "񄨁": 0x449e1,
  "񄩡": 0x44a41,
  "񄫁": 0x44aa1,
  "񄬡": 0x44b01,
  "񄮁": 0x44b61,
  "񄯡": 0x44bc1,
  "񄱁": 0x44c21,
  "񄲡": 0x44c81,
  "񄴁": 0x44ce1,
  "񄵡": 0x44d41,
  "񄷁": 0x44da1,
  "񄸡": 0x44e01,
  "񄺁": 0x44e61,
  "񄻡": 0x44ec1,
  "񄽁": 0x44f21,
  "񄾡": 0x44f81,
  "񅀁": 0x44fe1,
  "񅁡": 0x45041,
  "񅃁": 0x450a1,
  "񅄡": 0x45101,
  "񅆁": 0x45161,
  "񅇡": 0x451c1,
  "񅉁": 0x45221,
  "񅊡": 0x45281,
  "񅌁": 0x452e1,
  "񅍡": 0x45341,
  "񅏁": 0x453a1,
  "񅐡": 0x45401,
  "񅒁": 0x45461,
  "񅓡": 0x454c1,
  "񅕁": 0x45521,
  "񅖡": 0x45581,
  "񅘁": 0x455e1,
  "񅙡": 0x45641,
  "񅛁": 0x456a1,
  "񅜡": 0x45701,
  "񅞁": 0x45761,
  "񅟡": 0x457c1,
  "񅡁": 0x45821,
  "񅢡": 0x45881,
  "񅤁": 0x458e1,
  "񅥡": 0x45941,
  "񅧁": 0x459a1,
  "񅨡": 0x45a01,
  "񅪁": 0x45a61,
  "񅫡": 0x45ac1,
  "񅭁": 0x45b21,
  "񅮡": 0x45b81,
  "񅰁": 0x45be1,
  "񅱡": 0x45c41,
  "񅳁": 0x45ca1,
  "񅴡": 0x45d01,
  "񅶁": 0x45d61,
  "񅷡": 0x45dc1,
  "񅹁": 0x45e21,
  "񅺡": 0x45e81,
  "񅼁": 0x45ee1,
  "񅽡": 0x45f41,
  "񅿁": 0x45fa1,
  "񆀡": 0x46001,
  "񆂁": 0x46061,
  "񆃡": 0x460c1,
  "񆅁": 0x46121,
  "񆆡": 0x46181,
};

export const getRotation = (key: string, rotation: Omit<Rotation, "key">): string => {
  const id = rootShapeMap[key];
  if (!id) return key;
  return String.fromCodePoint(
    id +
      (rotation.hand === "right" ? 0 : 8) +
      mod(rotation.angle, 8) +
      mod(rotation.wristAngle, 3) * 16 +
      (rotation.perspective === "wallplane" ? 0 : 48)
  );
};

export const getRotationOptions = (rotation: Handshape): Rotation[] => [
  { ...rotation, key: rotation.wristAngle === 2 ? "񋠫" : "񋜏", wristAngle: rotation.wristAngle + 1 },
  { ...rotation, key: rotation.wristAngle === 0 ? "񋠯" : "񋜇", wristAngle: rotation.wristAngle - 1 },
  { ...rotation, key: "񋖏", angle: rotation.angle - 1 },
  { ...rotation, key: "񋖇", angle: rotation.angle + 1 },
  { ...rotation, key: "񋑡", hand: rotation.hand === "right" ? "left" : "right" },
];
